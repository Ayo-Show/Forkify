{"id":"node_modules/@ipld/unixfsv2/src/reader.js","dependencies":[{"name":"/Users/ayosowunmi/Desktop/udemy/fundamentals-javascript-course/complete-javascript-course-master/18-forkify/starter/package.json","includedInParent":true,"mtime":1643224433014},{"name":"/Users/ayosowunmi/Desktop/udemy/fundamentals-javascript-course/complete-javascript-course-master/18-forkify/starter/node_modules/@ipld/unixfsv2/package.json","includedInParent":true,"mtime":499162500000},{"name":"cids","loc":{"line":2,"column":20},"parent":"/Users/ayosowunmi/Desktop/udemy/fundamentals-javascript-course/complete-javascript-course-master/18-forkify/starter/node_modules/@ipld/unixfsv2/src/reader.js","resolved":"/Users/ayosowunmi/Desktop/udemy/fundamentals-javascript-course/complete-javascript-course-master/18-forkify/starter/node_modules/cids/src/index.js"},{"name":"@ipld/block","loc":{"line":3,"column":22},"parent":"/Users/ayosowunmi/Desktop/udemy/fundamentals-javascript-course/complete-javascript-course-master/18-forkify/starter/node_modules/@ipld/unixfsv2/src/reader.js","resolved":"/Users/ayosowunmi/Desktop/udemy/fundamentals-javascript-course/complete-javascript-course-master/18-forkify/starter/node_modules/@ipld/block/index.js"},{"name":"./types","loc":{"line":4,"column":28},"parent":"/Users/ayosowunmi/Desktop/udemy/fundamentals-javascript-course/complete-javascript-course-master/18-forkify/starter/node_modules/@ipld/unixfsv2/src/reader.js","resolved":"/Users/ayosowunmi/Desktop/udemy/fundamentals-javascript-course/complete-javascript-course-master/18-forkify/starter/node_modules/@ipld/unixfsv2/src/types.js"}],"generated":{"js":"'use strict'\nconst CID = require('cids')\nconst Block = require('@ipld/block')\nconst createTypes = require('./types')\n\nconst buildPath = (path) => {\n  return [].concat(\n    ...path\n      .split('/')\n      .filter(x => x)\n      .map(name => ['data', '*', name, '*'])\n  )\n}\n\nconst readIterator = async function * (reader, path, start, end) {\n  const data = await reader.get(path, 'data')\n  yield * data.read(start, end)\n}\n\nclass Reader {\n  constructor (root, get) {\n    this.types = createTypes({ getBlock: get })\n    if (Block.isBlock(root)) {\n      root = this.types.Directory.decoder(root.decode())\n    }\n    if (typeof root === 'string') root = new CID(root)\n    if (CID.isCID(root)) {\n      root = get(root).then(b => this.types.Directory.decoder(b.decode()))\n    }\n    this.root = root\n    this.getBlock = get\n  }\n\n  async ls (path) {\n    const root = await this.root\n    const files = []\n    path = [].concat(buildPath(path), ['data', '*']).join('/')\n    const node = await root.getNode(path)\n    const keys = node.keys()\n    for await (const file of keys) {\n      files.push(file)\n    }\n    return files\n  }\n\n  async get (path, ...props) {\n    const root = await this.root\n    path = [...buildPath(path), ...props]\n    const file = await root.getNode(path.join('/'))\n    return file\n  }\n\n  read (path, start, end) {\n    return readIterator(this, path, start, end)\n  }\n}\n\nmodule.exports = (...args) => new Reader(...args)\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@ipld/unixfsv2/src/reader.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}}],"sources":{"node_modules/@ipld/unixfsv2/src/reader.js":"'use strict'\nconst CID = require('cids')\nconst Block = require('@ipld/block')\nconst createTypes = require('./types')\n\nconst buildPath = (path) => {\n  return [].concat(\n    ...path\n      .split('/')\n      .filter(x => x)\n      .map(name => ['data', '*', name, '*'])\n  )\n}\n\nconst readIterator = async function * (reader, path, start, end) {\n  const data = await reader.get(path, 'data')\n  yield * data.read(start, end)\n}\n\nclass Reader {\n  constructor (root, get) {\n    this.types = createTypes({ getBlock: get })\n    if (Block.isBlock(root)) {\n      root = this.types.Directory.decoder(root.decode())\n    }\n    if (typeof root === 'string') root = new CID(root)\n    if (CID.isCID(root)) {\n      root = get(root).then(b => this.types.Directory.decoder(b.decode()))\n    }\n    this.root = root\n    this.getBlock = get\n  }\n\n  async ls (path) {\n    const root = await this.root\n    const files = []\n    path = [].concat(buildPath(path), ['data', '*']).join('/')\n    const node = await root.getNode(path)\n    const keys = node.keys()\n    for await (const file of keys) {\n      files.push(file)\n    }\n    return files\n  }\n\n  async get (path, ...props) {\n    const root = await this.root\n    path = [...buildPath(path), ...props]\n    const file = await root.getNode(path.join('/'))\n    return file\n  }\n\n  read (path, start, end) {\n    return readIterator(this, path, start, end)\n  }\n}\n\nmodule.exports = (...args) => new Reader(...args)\n"},"lineCount":59}},"error":null,"hash":"bd0034cb388f42065a9717abdc1642df","cacheData":{"env":{}}}